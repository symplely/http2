<?php

/*
 * This file is part of Concurrent PHP HTTP.
 *
 * (c) Martin Schröder <m.schroeder2007@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types = 1);

namespace Concurrent\Http\Http2;

/**
 * Huffman code definition, encoder and decoder tables as needed by HPACK.
 *
 * @author Martin Schröder
 */
abstract class HPackHuffman
{
    /**
     * Huffman codes from HPACK specification.
     */
    protected const HUFFMAN_CODE = [
        0x1FF8,     0x7FFFD8,   0x0FFFFFE2, 0x0FFFFFE3, 0x0FFFFFE4, 0x0FFFFFE5, 0x0FFFFFE6, 0x0FFFFFE7,
        0x0FFFFFE8, 0xFFFFEA,   0x3FFFFFFC, 0x0FFFFFE9, 0x0FFFFFEA, 0x3FFFFFFD, 0x0FFFFFEB, 0x0FFFFFEC,
        0x0FFFFFED, 0x0FFFFFEE, 0x0FFFFFEF, 0x0FFFFFF0, 0x0FFFFFF1, 0x0FFFFFF2, 0x3FFFFFFE, 0x0FFFFFF3,
        0x0FFFFFF4, 0x0FFFFFF5, 0x0FFFFFF6, 0x0FFFFFF7, 0x0FFFFFF8, 0x0FFFFFF9, 0x0FFFFFFA, 0x0FFFFFFB,
        0x14,       0x03F8,     0x03F9,     0x0FFA,     0x1FF9,     0x15,       0xF8,       0x07FA,
        0x03FA,     0x03FB,     0xF9,       0x07FB,     0xFA,       0x16,       0x17,       0x18,
        0x00,       0x01,       0x02,       0x19,       0x1A,       0x1B,       0x1C,       0x1D,
        0x1E,       0x1F,       0x5C,       0xFB,       0x7FFC,     0x20,       0x0FFB,     0x03FC,
        0x1FFA,     0x21,       0x5D,       0x5E,       0x5F,       0x60,       0x61,       0x62,
        0x63,       0x64,       0x65,       0x66,       0x67,       0x68,       0x69,       0x6A,
        0x6B,       0x6C,       0x6D,       0x6E,       0x6F,       0x70,       0x71,       0x72,
        0xFC,       0x73,       0xFD,       0x1FFB,     0x07FFF0,   0x1FFC,     0x3FFC,     0x22,
        0x7FFD,     0x03,       0x23,       0x04,       0x24,       0x05,       0x25,       0x26,
        0x27,       0x06,       0x74,       0x75,       0x28,       0x29,       0x2A,       0x07,
        0x2B,       0x76,       0x2C,       0x08,       0x09,       0x2D,       0x77,       0x78,
        0x79,       0x7A,       0x7B,       0x7FFE,     0x07FC,     0x3FFD,     0x1FFD,     0x0FFFFFFC,
        0x0FFFE6,   0x3FFFD2,   0x0FFFE7,   0x0FFFE8,   0x3FFFD3,   0x3FFFD4,   0x3FFFD5,   0x7FFFD9,
        0x3FFFD6,   0x7FFFDA,   0x7FFFDB,   0x7FFFDC,   0x7FFFDD,   0x7FFFDE,   0xFFFFEB,   0x7FFFDF,
        0xFFFFEC,   0xFFFFED,   0x3FFFD7,   0x7FFFE0,   0xFFFFEE,   0x7FFFE1,   0x7FFFE2,   0x7FFFE3,
        0x7FFFE4,   0x1FFFDC,   0x3FFFD8,   0x7FFFE5,   0x3FFFD9,   0x7FFFE6,   0x7FFFE7,   0xFFFFEF,
        0x3FFFDA,   0x1FFFDD,   0x0FFFE9,   0x3FFFDB,   0x3FFFDC,   0x7FFFE8,   0x7FFFE9,   0x1FFFDE,
        0x7FFFEA,   0x3FFFDD,   0x3FFFDE,   0xFFFFF0,   0x1FFFDF,   0x3FFFDF,   0x7FFFEB,   0x7FFFEC,
        0x1FFFE0,   0x1FFFE1,   0x3FFFE0,   0x1FFFE2,   0x7FFFED,   0x3FFFE1,   0x7FFFEE,   0x7FFFEF,
        0x0FFFEA,   0x3FFFE2,   0x3FFFE3,   0x3FFFE4,   0x7FFFF0,   0x3FFFE5,   0x3FFFE6,   0x7FFFF1,
        0x03FFFFE0, 0x03FFFFE1, 0x0FFFEB,   0x07FFF1,   0x3FFFE7,   0x7FFFF2,   0x3FFFE8,   0x01FFFFEC,
        0x03FFFFE2, 0x03FFFFE3, 0x03FFFFE4, 0x07FFFFDE, 0x07FFFFDF, 0x03FFFFE5, 0xFFFFF1,   0x01FFFFED,
        0x07FFF2,   0x1FFFE3,   0x03FFFFE6, 0x07FFFFE0, 0x07FFFFE1, 0x03FFFFE7, 0x07FFFFE2, 0xFFFFF2,
        0x1FFFE4,   0x1FFFE5,   0x03FFFFE8, 0x03FFFFE9, 0x0FFFFFFD, 0x07FFFFE3, 0x07FFFFE4, 0x07FFFFE5,
        0x0FFFEC,   0xFFFFF3,   0x0FFFED,   0x1FFFE6,   0x3FFFE9,   0x1FFFE7,   0x1FFFE8,   0x7FFFF3,
        0x3FFFEA,   0x3FFFEB,   0x01FFFFEE, 0x01FFFFEF, 0xFFFFF4,   0xFFFFF5,   0x03FFFFEA, 0x7FFFF4,
        0x03FFFFEB, 0x07FFFFE6, 0x03FFFFEC, 0x03FFFFED, 0x07FFFFE7, 0x07FFFFE8, 0x07FFFFE9, 0x07FFFFEA,
        0x07FFFFEB, 0x0FFFFFFE, 0x07FFFFEC, 0x07FFFFED, 0x07FFFFEE, 0x07FFFFEF, 0x07FFFFF0, 0x03FFFFEE
    ];
    
    /**
     * Huffman codes lengths according to HPACK specification.
     */
    protected const HUFFMAN_CODE_LENGTHS = [
        13, 23, 28, 28, 28, 28, 28, 28, 28, 24, 30, 28, 28, 30, 28, 28,
        28, 28, 28, 28, 28, 28, 30, 28, 28, 28, 28, 28, 28, 28, 28, 28,
        6,  10, 10, 12, 13, 6,  8,  11, 10, 10, 8,  11, 8,  6,  6,  6,
        5,  5,  5,  6,  6,  6,  6,  6,  6,  6,  7,  8,  15, 6,  12, 10,
        13, 6,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,
        7,  7,  7,  7,  7,  7,  7,  7,  8,  7,  8,  13, 19, 13, 14, 6,
        15, 5,  6,  5,  6,  5,  6,  6,  6,  5,  7,  7,  6,  6,  6,  5,
        6,  7,  6,  5,  5,  6,  7,  7,  7,  7,  7,  15, 11, 14, 13, 28,
        20, 22, 20, 20, 22, 22, 22, 23, 22, 23, 23, 23, 23, 23, 24, 23,
        24, 24, 22, 23, 24, 23, 23, 23, 23, 21, 22, 23, 22, 23, 23, 24,
        22, 21, 20, 22, 22, 23, 23, 21, 23, 22, 22, 24, 21, 22, 23, 23,
        21, 21, 22, 21, 23, 22, 23, 23, 20, 22, 22, 22, 23, 22, 22, 23,
        26, 26, 20, 19, 22, 23, 22, 25, 26, 26, 26, 27, 27, 26, 24, 25,
        19, 21, 26, 27, 27, 26, 27, 24, 21, 21, 26, 26, 28, 27, 27, 27,
        20, 24, 20, 21, 22, 21, 21, 23, 22, 22, 25, 25, 24, 24, 26, 23,
        26, 27, 26, 26, 27, 27, 27, 27, 27, 28, 27, 27, 27, 27, 27, 26
    ];
    
    /**
     * Encoder table mapping input characters to Huffman code fragments.
     *
     * Each entry contains the fragment length (byte 1 / 5) and the code fragment (byte 3 / 7), the
     * remaining bits are all set to 0 (needed by buffer shifting during encoding).
     */
    protected const ENCODER_TABLE = [
        "\x00" => [0x0800FF00, 0x0500C000],
        "\x01" => [0x0800FF00, 0x0800FF00, 0x0700B000],
        "\x02" => [0x0800FF00, 0x0800FF00, 0x0800FE00, 0x04002000],
        "\x03" => [0x0800FF00, 0x0800FF00, 0x0800FE00, 0x04003000],
        "\x04" => [0x0800FF00, 0x0800FF00, 0x0800FE00, 0x04004000],
        "\x05" => [0x0800FF00, 0x0800FF00, 0x0800FE00, 0x04005000],
        "\x06" => [0x0800FF00, 0x0800FF00, 0x0800FE00, 0x04006000],
        "\x07" => [0x0800FF00, 0x0800FF00, 0x0800FE00, 0x04007000],
        "\x08" => [0x0800FF00, 0x0800FF00, 0x0800FE00, 0x04008000],
        "\x09" => [0x0800FF00, 0x0800FF00, 0x0800EA00],
        "\x0A" => [0x0800FF00, 0x0800FF00, 0x0800FF00, 0x0600F000],
        "\x0B" => [0x0800FF00, 0x0800FF00, 0x0800FE00, 0x04009000],
        "\x0C" => [0x0800FF00, 0x0800FF00, 0x0800FE00, 0x0400A000],
        "\x0D" => [0x0800FF00, 0x0800FF00, 0x0800FF00, 0x0600F400],
        "\x0E" => [0x0800FF00, 0x0800FF00, 0x0800FE00, 0x0400B000],
        "\x0F" => [0x0800FF00, 0x0800FF00, 0x0800FE00, 0x0400C000],
        "\x10" => [0x0800FF00, 0x0800FF00, 0x0800FE00, 0x0400D000],
        "\x11" => [0x0800FF00, 0x0800FF00, 0x0800FE00, 0x0400E000],
        "\x12" => [0x0800FF00, 0x0800FF00, 0x0800FE00, 0x0400F000],
        "\x13" => [0x0800FF00, 0x0800FF00, 0x0800FF00, 0x04000000],
        "\x14" => [0x0800FF00, 0x0800FF00, 0x0800FF00, 0x04001000],
        "\x15" => [0x0800FF00, 0x0800FF00, 0x0800FF00, 0x04002000],
        "\x16" => [0x0800FF00, 0x0800FF00, 0x0800FF00, 0x0600F800],
        "\x17" => [0x0800FF00, 0x0800FF00, 0x0800FF00, 0x04003000],
        "\x18" => [0x0800FF00, 0x0800FF00, 0x0800FF00, 0x04004000],
        "\x19" => [0x0800FF00, 0x0800FF00, 0x0800FF00, 0x04005000],
        "\x1A" => [0x0800FF00, 0x0800FF00, 0x0800FF00, 0x04006000],
        "\x1B" => [0x0800FF00, 0x0800FF00, 0x0800FF00, 0x04007000],
        "\x1C" => [0x0800FF00, 0x0800FF00, 0x0800FF00, 0x04008000],
        "\x1D" => [0x0800FF00, 0x0800FF00, 0x0800FF00, 0x04009000],
        "\x1E" => [0x0800FF00, 0x0800FF00, 0x0800FF00, 0x0400A000],
        "\x1F" => [0x0800FF00, 0x0800FF00, 0x0800FF00, 0x0400B000],
        "\x20" => [0x06005000],
        "\x21" => [0x0800FE00, 0x02000000],
        "\x22" => [0x0800FE00, 0x02004000],
        "\x23" => [0x0800FF00, 0x0400A000],
        "\x24" => [0x0800FF00, 0x0500C800],
        "\x25" => [0x06005400],
        "\x26" => [0x0800F800],
        "\x27" => [0x0800FF00, 0x03004000],
        "\x28" => [0x0800FE00, 0x02008000],
        "\x29" => [0x0800FE00, 0x0200C000],
        "\x2A" => [0x0800F900],
        "\x2B" => [0x0800FF00, 0x03006000],
        "\x2C" => [0x0800FA00],
        "\x2D" => [0x06005800],
        "\x2E" => [0x06005C00],
        "\x2F" => [0x06006000],
        "\x30" => [0x05000000],
        "\x31" => [0x05000800],
        "\x32" => [0x05001000],
        "\x33" => [0x06006400],
        "\x34" => [0x06006800],
        "\x35" => [0x06006C00],
        "\x36" => [0x06007000],
        "\x37" => [0x06007400],
        "\x38" => [0x06007800],
        "\x39" => [0x06007C00],
        "\x3A" => [0x0700B800],
        "\x3B" => [0x0800FB00],
        "\x3C" => [0x0800FF00, 0x0700F800],
        "\x3D" => [0x06008000],
        "\x3E" => [0x0800FF00, 0x0400B000],
        "\x3F" => [0x0800FF00, 0x02000000],
        "\x40" => [0x0800FF00, 0x0500D000],
        "\x41" => [0x06008400],
        "\x42" => [0x0700BA00],
        "\x43" => [0x0700BC00],
        "\x44" => [0x0700BE00],
        "\x45" => [0x0700C000],
        "\x46" => [0x0700C200],
        "\x47" => [0x0700C400],
        "\x48" => [0x0700C600],
        "\x49" => [0x0700C800],
        "\x4A" => [0x0700CA00],
        "\x4B" => [0x0700CC00],
        "\x4C" => [0x0700CE00],
        "\x4D" => [0x0700D000],
        "\x4E" => [0x0700D200],
        "\x4F" => [0x0700D400],
        "\x50" => [0x0700D600],
        "\x51" => [0x0700D800],
        "\x52" => [0x0700DA00],
        "\x53" => [0x0700DC00],
        "\x54" => [0x0700DE00],
        "\x55" => [0x0700E000],
        "\x56" => [0x0700E200],
        "\x57" => [0x0700E400],
        "\x58" => [0x0800FC00],
        "\x59" => [0x0700E600],
        "\x5A" => [0x0800FD00],
        "\x5B" => [0x0800FF00, 0x0500D800],
        "\x5C" => [0x0800FF00, 0x0800FE00, 0x03000000],
        "\x5D" => [0x0800FF00, 0x0500E000],
        "\x5E" => [0x0800FF00, 0x0600F000],
        "\x5F" => [0x06008800],
        "\x60" => [0x0800FF00, 0x0700FA00],
        "\x61" => [0x05001800],
        "\x62" => [0x06008C00],
        "\x63" => [0x05002000],
        "\x64" => [0x06009000],
        "\x65" => [0x05002800],
        "\x66" => [0x06009400],
        "\x67" => [0x06009800],
        "\x68" => [0x06009C00],
        "\x69" => [0x05003000],
        "\x6A" => [0x0700E800],
        "\x6B" => [0x0700EA00],
        "\x6C" => [0x0600A000],
        "\x6D" => [0x0600A400],
        "\x6E" => [0x0600A800],
        "\x6F" => [0x05003800],
        "\x70" => [0x0600AC00],
        "\x71" => [0x0700EC00],
        "\x72" => [0x0600B000],
        "\x73" => [0x05004000],
        "\x74" => [0x05004800],
        "\x75" => [0x0600B400],
        "\x76" => [0x0700EE00],
        "\x77" => [0x0700F000],
        "\x78" => [0x0700F200],
        "\x79" => [0x0700F400],
        "\x7A" => [0x0700F600],
        "\x7B" => [0x0800FF00, 0x0700FC00],
        "\x7C" => [0x0800FF00, 0x03008000],
        "\x7D" => [0x0800FF00, 0x0600F400],
        "\x7E" => [0x0800FF00, 0x0500E800],
        "\x7F" => [0x0800FF00, 0x0800FF00, 0x0800FF00, 0x0400C000],
        "\x80" => [0x0800FF00, 0x0800FE00, 0x04006000],
        "\x81" => [0x0800FF00, 0x0800FF00, 0x06004800],
        "\x82" => [0x0800FF00, 0x0800FE00, 0x04007000],
        "\x83" => [0x0800FF00, 0x0800FE00, 0x04008000],
        "\x84" => [0x0800FF00, 0x0800FF00, 0x06004C00],
        "\x85" => [0x0800FF00, 0x0800FF00, 0x06005000],
        "\x86" => [0x0800FF00, 0x0800FF00, 0x06005400],
        "\x87" => [0x0800FF00, 0x0800FF00, 0x0700B200],
        "\x88" => [0x0800FF00, 0x0800FF00, 0x06005800],
        "\x89" => [0x0800FF00, 0x0800FF00, 0x0700B400],
        "\x8A" => [0x0800FF00, 0x0800FF00, 0x0700B600],
        "\x8B" => [0x0800FF00, 0x0800FF00, 0x0700B800],
        "\x8C" => [0x0800FF00, 0x0800FF00, 0x0700BA00],
        "\x8D" => [0x0800FF00, 0x0800FF00, 0x0700BC00],
        "\x8E" => [0x0800FF00, 0x0800FF00, 0x0800EB00],
        "\x8F" => [0x0800FF00, 0x0800FF00, 0x0700BE00],
        "\x90" => [0x0800FF00, 0x0800FF00, 0x0800EC00],
        "\x91" => [0x0800FF00, 0x0800FF00, 0x0800ED00],
        "\x92" => [0x0800FF00, 0x0800FF00, 0x06005C00],
        "\x93" => [0x0800FF00, 0x0800FF00, 0x0700C000],
        "\x94" => [0x0800FF00, 0x0800FF00, 0x0800EE00],
        "\x95" => [0x0800FF00, 0x0800FF00, 0x0700C200],
        "\x96" => [0x0800FF00, 0x0800FF00, 0x0700C400],
        "\x97" => [0x0800FF00, 0x0800FF00, 0x0700C600],
        "\x98" => [0x0800FF00, 0x0800FF00, 0x0700C800],
        "\x99" => [0x0800FF00, 0x0800FE00, 0x0500E000],
        "\x9A" => [0x0800FF00, 0x0800FF00, 0x06006000],
        "\x9B" => [0x0800FF00, 0x0800FF00, 0x0700CA00],
        "\x9C" => [0x0800FF00, 0x0800FF00, 0x06006400],
        "\x9D" => [0x0800FF00, 0x0800FF00, 0x0700CC00],
        "\x9E" => [0x0800FF00, 0x0800FF00, 0x0700CE00],
        "\x9F" => [0x0800FF00, 0x0800FF00, 0x0800EF00],
        "\xA0" => [0x0800FF00, 0x0800FF00, 0x06006800],
        "\xA1" => [0x0800FF00, 0x0800FE00, 0x0500E800],
        "\xA2" => [0x0800FF00, 0x0800FE00, 0x04009000],
        "\xA3" => [0x0800FF00, 0x0800FF00, 0x06006C00],
        "\xA4" => [0x0800FF00, 0x0800FF00, 0x06007000],
        "\xA5" => [0x0800FF00, 0x0800FF00, 0x0700D000],
        "\xA6" => [0x0800FF00, 0x0800FF00, 0x0700D200],
        "\xA7" => [0x0800FF00, 0x0800FE00, 0x0500F000],
        "\xA8" => [0x0800FF00, 0x0800FF00, 0x0700D400],
        "\xA9" => [0x0800FF00, 0x0800FF00, 0x06007400],
        "\xAA" => [0x0800FF00, 0x0800FF00, 0x06007800],
        "\xAB" => [0x0800FF00, 0x0800FF00, 0x0800F000],
        "\xAC" => [0x0800FF00, 0x0800FE00, 0x0500F800],
        "\xAD" => [0x0800FF00, 0x0800FF00, 0x06007C00],
        "\xAE" => [0x0800FF00, 0x0800FF00, 0x0700D600],
        "\xAF" => [0x0800FF00, 0x0800FF00, 0x0700D800],
        "\xB0" => [0x0800FF00, 0x0800FF00, 0x05000000],
        "\xB1" => [0x0800FF00, 0x0800FF00, 0x05000800],
        "\xB2" => [0x0800FF00, 0x0800FF00, 0x06008000],
        "\xB3" => [0x0800FF00, 0x0800FF00, 0x05001000],
        "\xB4" => [0x0800FF00, 0x0800FF00, 0x0700DA00],
        "\xB5" => [0x0800FF00, 0x0800FF00, 0x06008400],
        "\xB6" => [0x0800FF00, 0x0800FF00, 0x0700DC00],
        "\xB7" => [0x0800FF00, 0x0800FF00, 0x0700DE00],
        "\xB8" => [0x0800FF00, 0x0800FE00, 0x0400A000],
        "\xB9" => [0x0800FF00, 0x0800FF00, 0x06008800],
        "\xBA" => [0x0800FF00, 0x0800FF00, 0x06008C00],
        "\xBB" => [0x0800FF00, 0x0800FF00, 0x06009000],
        "\xBC" => [0x0800FF00, 0x0800FF00, 0x0700E000],
        "\xBD" => [0x0800FF00, 0x0800FF00, 0x06009400],
        "\xBE" => [0x0800FF00, 0x0800FF00, 0x06009800],
        "\xBF" => [0x0800FF00, 0x0800FF00, 0x0700E200],
        "\xC0" => [0x0800FF00, 0x0800FF00, 0x0800F800, 0x02000000],
        "\xC1" => [0x0800FF00, 0x0800FF00, 0x0800F800, 0x02004000],
        "\xC2" => [0x0800FF00, 0x0800FE00, 0x0400B000],
        "\xC3" => [0x0800FF00, 0x0800FE00, 0x03002000],
        "\xC4" => [0x0800FF00, 0x0800FF00, 0x06009C00],
        "\xC5" => [0x0800FF00, 0x0800FF00, 0x0700E400],
        "\xC6" => [0x0800FF00, 0x0800FF00, 0x0600A000],
        "\xC7" => [0x0800FF00, 0x0800FF00, 0x0800F600, 0x01000000],
        "\xC8" => [0x0800FF00, 0x0800FF00, 0x0800F800, 0x02008000],
        "\xC9" => [0x0800FF00, 0x0800FF00, 0x0800F800, 0x0200C000],
        "\xCA" => [0x0800FF00, 0x0800FF00, 0x0800F900, 0x02000000],
        "\xCB" => [0x0800FF00, 0x0800FF00, 0x0800FB00, 0x0300C000],
        "\xCC" => [0x0800FF00, 0x0800FF00, 0x0800FB00, 0x0300E000],
        "\xCD" => [0x0800FF00, 0x0800FF00, 0x0800F900, 0x02004000],
        "\xCE" => [0x0800FF00, 0x0800FF00, 0x0800F100],
        "\xCF" => [0x0800FF00, 0x0800FF00, 0x0800F600, 0x01008000],
        "\xD0" => [0x0800FF00, 0x0800FE00, 0x03004000],
        "\xD1" => [0x0800FF00, 0x0800FF00, 0x05001800],
        "\xD2" => [0x0800FF00, 0x0800FF00, 0x0800F900, 0x02008000],
        "\xD3" => [0x0800FF00, 0x0800FF00, 0x0800FC00, 0x03000000],
        "\xD4" => [0x0800FF00, 0x0800FF00, 0x0800FC00, 0x03002000],
        "\xD5" => [0x0800FF00, 0x0800FF00, 0x0800F900, 0x0200C000],
        "\xD6" => [0x0800FF00, 0x0800FF00, 0x0800FC00, 0x03004000],
        "\xD7" => [0x0800FF00, 0x0800FF00, 0x0800F200],
        "\xD8" => [0x0800FF00, 0x0800FF00, 0x05002000],
        "\xD9" => [0x0800FF00, 0x0800FF00, 0x05002800],
        "\xDA" => [0x0800FF00, 0x0800FF00, 0x0800FA00, 0x02000000],
        "\xDB" => [0x0800FF00, 0x0800FF00, 0x0800FA00, 0x02004000],
        "\xDC" => [0x0800FF00, 0x0800FF00, 0x0800FF00, 0x0400D000],
        "\xDD" => [0x0800FF00, 0x0800FF00, 0x0800FC00, 0x03006000],
        "\xDE" => [0x0800FF00, 0x0800FF00, 0x0800FC00, 0x03008000],
        "\xDF" => [0x0800FF00, 0x0800FF00, 0x0800FC00, 0x0300A000],
        "\xE0" => [0x0800FF00, 0x0800FE00, 0x0400C000],
        "\xE1" => [0x0800FF00, 0x0800FF00, 0x0800F300],
        "\xE2" => [0x0800FF00, 0x0800FE00, 0x0400D000],
        "\xE3" => [0x0800FF00, 0x0800FF00, 0x05003000],
        "\xE4" => [0x0800FF00, 0x0800FF00, 0x0600A400],
        "\xE5" => [0x0800FF00, 0x0800FF00, 0x05003800],
        "\xE6" => [0x0800FF00, 0x0800FF00, 0x05004000],
        "\xE7" => [0x0800FF00, 0x0800FF00, 0x0700E600],
        "\xE8" => [0x0800FF00, 0x0800FF00, 0x0600A800],
        "\xE9" => [0x0800FF00, 0x0800FF00, 0x0600AC00],
        "\xEA" => [0x0800FF00, 0x0800FF00, 0x0800F700, 0x01000000],
        "\xEB" => [0x0800FF00, 0x0800FF00, 0x0800F700, 0x01008000],
        "\xEC" => [0x0800FF00, 0x0800FF00, 0x0800F400],
        "\xED" => [0x0800FF00, 0x0800FF00, 0x0800F500],
        "\xEE" => [0x0800FF00, 0x0800FF00, 0x0800FA00, 0x02008000],
        "\xEF" => [0x0800FF00, 0x0800FF00, 0x0700E800],
        "\xF0" => [0x0800FF00, 0x0800FF00, 0x0800FA00, 0x0200C000],
        "\xF1" => [0x0800FF00, 0x0800FF00, 0x0800FC00, 0x0300C000],
        "\xF2" => [0x0800FF00, 0x0800FF00, 0x0800FB00, 0x02000000],
        "\xF3" => [0x0800FF00, 0x0800FF00, 0x0800FB00, 0x02004000],
        "\xF4" => [0x0800FF00, 0x0800FF00, 0x0800FC00, 0x0300E000],
        "\xF5" => [0x0800FF00, 0x0800FF00, 0x0800FD00, 0x03000000],
        "\xF6" => [0x0800FF00, 0x0800FF00, 0x0800FD00, 0x03002000],
        "\xF7" => [0x0800FF00, 0x0800FF00, 0x0800FD00, 0x03004000],
        "\xF8" => [0x0800FF00, 0x0800FF00, 0x0800FD00, 0x03006000],
        "\xF9" => [0x0800FF00, 0x0800FF00, 0x0800FF00, 0x0400E000],
        "\xFA" => [0x0800FF00, 0x0800FF00, 0x0800FD00, 0x03008000],
        "\xFB" => [0x0800FF00, 0x0800FF00, 0x0800FD00, 0x0300A000],
        "\xFC" => [0x0800FF00, 0x0800FF00, 0x0800FD00, 0x0300C000],
        "\xFD" => [0x0800FF00, 0x0800FF00, 0x0800FD00, 0x0300E000],
        "\xFE" => [0x0800FF00, 0x0800FF00, 0x0800FE00, 0x03000000],
        "\xFF" => [0x0800FF00, 0x0800FF00, 0x0800FB00, 0x02008000]
    ];
    
    /**
     * Helper table that holds the number of input bits to be consumed when an encoded
     * character has been resolved.
     */
    protected const DECODER_LENS = [
        "\x00" => 5, "\x01" => 7, "\x02" => 4, "\x03" => 4, "\x04" => 4, "\x05" => 4, "\x06" => 4, "\x07" => 4,
        "\x08" => 4, "\x09" => 8, "\x0A" => 6, "\x0B" => 4, "\x0C" => 4, "\x0D" => 6, "\x0E" => 4, "\x0F" => 4,
        "\x10" => 4, "\x11" => 4, "\x12" => 4, "\x13" => 4, "\x14" => 4, "\x15" => 4, "\x16" => 6, "\x17" => 4,
        "\x18" => 4, "\x19" => 4, "\x1A" => 4, "\x1B" => 4, "\x1C" => 4, "\x1D" => 4, "\x1E" => 4, "\x1F" => 4,
        "\x20" => 6, "\x21" => 2, "\x22" => 2, "\x23" => 4, "\x24" => 5, "\x25" => 6, "\x26" => 8, "\x27" => 3,
        "\x28" => 2, "\x29" => 2, "\x2A" => 8, "\x2B" => 3, "\x2C" => 8, "\x2D" => 6, "\x2E" => 6, "\x2F" => 6,
        "\x30" => 5, "\x31" => 5, "\x32" => 5, "\x33" => 6, "\x34" => 6, "\x35" => 6, "\x36" => 6, "\x37" => 6,
        "\x38" => 6, "\x39" => 6, "\x3A" => 7, "\x3B" => 8, "\x3C" => 7, "\x3D" => 6, "\x3E" => 4, "\x3F" => 2,
        "\x40" => 5, "\x41" => 6, "\x42" => 7, "\x43" => 7, "\x44" => 7, "\x45" => 7, "\x46" => 7, "\x47" => 7,
        "\x48" => 7, "\x49" => 7, "\x4A" => 7, "\x4B" => 7, "\x4C" => 7, "\x4D" => 7, "\x4E" => 7, "\x4F" => 7,
        "\x50" => 7, "\x51" => 7, "\x52" => 7, "\x53" => 7, "\x54" => 7, "\x55" => 7, "\x56" => 7, "\x57" => 7,
        "\x58" => 8, "\x59" => 7, "\x5A" => 8, "\x5B" => 5, "\x5C" => 3, "\x5D" => 5, "\x5E" => 6, "\x5F" => 6,
        "\x60" => 7, "\x61" => 5, "\x62" => 6, "\x63" => 5, "\x64" => 6, "\x65" => 5, "\x66" => 6, "\x67" => 6,
        "\x68" => 6, "\x69" => 5, "\x6A" => 7, "\x6B" => 7, "\x6C" => 6, "\x6D" => 6, "\x6E" => 6, "\x6F" => 5,
        "\x70" => 6, "\x71" => 7, "\x72" => 6, "\x73" => 5, "\x74" => 5, "\x75" => 6, "\x76" => 7, "\x77" => 7,
        "\x78" => 7, "\x79" => 7, "\x7A" => 7, "\x7B" => 7, "\x7C" => 3, "\x7D" => 6, "\x7E" => 5, "\x7F" => 4,
        "\x80" => 4, "\x81" => 6, "\x82" => 4, "\x83" => 4, "\x84" => 6, "\x85" => 6, "\x86" => 6, "\x87" => 7,
        "\x88" => 6, "\x89" => 7, "\x8A" => 7, "\x8B" => 7, "\x8C" => 7, "\x8D" => 7, "\x8E" => 8, "\x8F" => 7,
        "\x90" => 8, "\x91" => 8, "\x92" => 6, "\x93" => 7, "\x94" => 8, "\x95" => 7, "\x96" => 7, "\x97" => 7,
        "\x98" => 7, "\x99" => 5, "\x9A" => 6, "\x9B" => 7, "\x9C" => 6, "\x9D" => 7, "\x9E" => 7, "\x9F" => 8,
        "\xA0" => 6, "\xA1" => 5, "\xA2" => 4, "\xA3" => 6, "\xA4" => 6, "\xA5" => 7, "\xA6" => 7, "\xA7" => 5,
        "\xA8" => 7, "\xA9" => 6, "\xAA" => 6, "\xAB" => 8, "\xAC" => 5, "\xAD" => 6, "\xAE" => 7, "\xAF" => 7,
        "\xB0" => 5, "\xB1" => 5, "\xB2" => 6, "\xB3" => 5, "\xB4" => 7, "\xB5" => 6, "\xB6" => 7, "\xB7" => 7,
        "\xB8" => 4, "\xB9" => 6, "\xBA" => 6, "\xBB" => 6, "\xBC" => 7, "\xBD" => 6, "\xBE" => 6, "\xBF" => 7,
        "\xC0" => 2, "\xC1" => 2, "\xC2" => 4, "\xC3" => 3, "\xC4" => 6, "\xC5" => 7, "\xC6" => 6, "\xC7" => 1,
        "\xC8" => 2, "\xC9" => 2, "\xCA" => 2, "\xCB" => 3, "\xCC" => 3, "\xCD" => 2, "\xCE" => 8, "\xCF" => 1,
        "\xD0" => 3, "\xD1" => 5, "\xD2" => 2, "\xD3" => 3, "\xD4" => 3, "\xD5" => 2, "\xD6" => 3, "\xD7" => 8,
        "\xD8" => 5, "\xD9" => 5, "\xDA" => 2, "\xDB" => 2, "\xDC" => 4, "\xDD" => 3, "\xDE" => 3, "\xDF" => 3,
        "\xE0" => 4, "\xE1" => 8, "\xE2" => 4, "\xE3" => 5, "\xE4" => 6, "\xE5" => 5, "\xE6" => 5, "\xE7" => 7,
        "\xE8" => 6, "\xE9" => 6, "\xEA" => 1, "\xEB" => 1, "\xEC" => 8, "\xED" => 8, "\xEE" => 2, "\xEF" => 7,
        "\xF0" => 2, "\xF1" => 3, "\xF2" => 2, "\xF3" => 2, "\xF4" => 3, "\xF5" => 3, "\xF6" => 3, "\xF7" => 3,
        "\xF8" => 3, "\xF9" => 4, "\xFA" => 3, "\xFB" => 3, "\xFC" => 3, "\xFD" => 3, "\xFE" => 3, "\xFF" => 2
    ];
    
    /**
     * Decoder table mapping input characters to encoded characters or (in case of nested
     * array) encoding path prefixes.
     */
    protected const DECODER_TABLE = [
        "\x30", "\x30", "\x30", "\x30", "\x30", "\x30", "\x30", "\x30",
        "\x31", "\x31", "\x31", "\x31", "\x31", "\x31", "\x31", "\x31",
        "\x32", "\x32", "\x32", "\x32", "\x32", "\x32", "\x32", "\x32",
        "\x61", "\x61", "\x61", "\x61", "\x61", "\x61", "\x61", "\x61",
        "\x63", "\x63", "\x63", "\x63", "\x63", "\x63", "\x63", "\x63",
        "\x65", "\x65", "\x65", "\x65", "\x65", "\x65", "\x65", "\x65",
        "\x69", "\x69", "\x69", "\x69", "\x69", "\x69", "\x69", "\x69",
        "\x6F", "\x6F", "\x6F", "\x6F", "\x6F", "\x6F", "\x6F", "\x6F",
        "\x73", "\x73", "\x73", "\x73", "\x73", "\x73", "\x73", "\x73",
        "\x74", "\x74", "\x74", "\x74", "\x74", "\x74", "\x74", "\x74",
        "\x20", "\x20", "\x20", "\x20", "\x25", "\x25", "\x25", "\x25",
        "\x2D", "\x2D", "\x2D", "\x2D", "\x2E", "\x2E", "\x2E", "\x2E",
        "\x2F", "\x2F", "\x2F", "\x2F", "\x33", "\x33", "\x33", "\x33",
        "\x34", "\x34", "\x34", "\x34", "\x35", "\x35", "\x35", "\x35",
        "\x36", "\x36", "\x36", "\x36", "\x37", "\x37", "\x37", "\x37",
        "\x38", "\x38", "\x38", "\x38", "\x39", "\x39", "\x39", "\x39",
        "\x3D", "\x3D", "\x3D", "\x3D", "\x41", "\x41", "\x41", "\x41",
        "\x5F", "\x5F", "\x5F", "\x5F", "\x62", "\x62", "\x62", "\x62",
        "\x64", "\x64", "\x64", "\x64", "\x66", "\x66", "\x66", "\x66",
        "\x67", "\x67", "\x67", "\x67", "\x68", "\x68", "\x68", "\x68",
        "\x6C", "\x6C", "\x6C", "\x6C", "\x6D", "\x6D", "\x6D", "\x6D",
        "\x6E", "\x6E", "\x6E", "\x6E", "\x70", "\x70", "\x70", "\x70",
        "\x72", "\x72", "\x72", "\x72", "\x75", "\x75", "\x75", "\x75",
        "\x3A", "\x3A", "\x42", "\x42", "\x43", "\x43", "\x44", "\x44",
        "\x45", "\x45", "\x46", "\x46", "\x47", "\x47", "\x48", "\x48",
        "\x49", "\x49", "\x4A", "\x4A", "\x4B", "\x4B", "\x4C", "\x4C",
        "\x4D", "\x4D", "\x4E", "\x4E", "\x4F", "\x4F", "\x50", "\x50",
        "\x51", "\x51", "\x52", "\x52", "\x53", "\x53", "\x54", "\x54",
        "\x55", "\x55", "\x56", "\x56", "\x57", "\x57", "\x59", "\x59",
        "\x6A", "\x6A", "\x6B", "\x6B", "\x71", "\x71", "\x76", "\x76",
        "\x77", "\x77", "\x78", "\x78", "\x79", "\x79", "\x7A", "\x7A",
        "\x26", "\x2A", "\x2C", "\x3B", "\x58", "\x5A", [
            "\x21", "\x21", "\x21", "\x21", "\x21", "\x21", "\x21", "\x21",
            "\x21", "\x21", "\x21", "\x21", "\x21", "\x21", "\x21", "\x21",
            "\x21", "\x21", "\x21", "\x21", "\x21", "\x21", "\x21", "\x21",
            "\x21", "\x21", "\x21", "\x21", "\x21", "\x21", "\x21", "\x21",
            "\x21", "\x21", "\x21", "\x21", "\x21", "\x21", "\x21", "\x21",
            "\x21", "\x21", "\x21", "\x21", "\x21", "\x21", "\x21", "\x21",
            "\x21", "\x21", "\x21", "\x21", "\x21", "\x21", "\x21", "\x21",
            "\x21", "\x21", "\x21", "\x21", "\x21", "\x21", "\x21", "\x21",
            "\x22", "\x22", "\x22", "\x22", "\x22", "\x22", "\x22", "\x22",
            "\x22", "\x22", "\x22", "\x22", "\x22", "\x22", "\x22", "\x22",
            "\x22", "\x22", "\x22", "\x22", "\x22", "\x22", "\x22", "\x22",
            "\x22", "\x22", "\x22", "\x22", "\x22", "\x22", "\x22", "\x22",
            "\x22", "\x22", "\x22", "\x22", "\x22", "\x22", "\x22", "\x22",
            "\x22", "\x22", "\x22", "\x22", "\x22", "\x22", "\x22", "\x22",
            "\x22", "\x22", "\x22", "\x22", "\x22", "\x22", "\x22", "\x22",
            "\x22", "\x22", "\x22", "\x22", "\x22", "\x22", "\x22", "\x22",
            "\x28", "\x28", "\x28", "\x28", "\x28", "\x28", "\x28", "\x28",
            "\x28", "\x28", "\x28", "\x28", "\x28", "\x28", "\x28", "\x28",
            "\x28", "\x28", "\x28", "\x28", "\x28", "\x28", "\x28", "\x28",
            "\x28", "\x28", "\x28", "\x28", "\x28", "\x28", "\x28", "\x28",
            "\x28", "\x28", "\x28", "\x28", "\x28", "\x28", "\x28", "\x28",
            "\x28", "\x28", "\x28", "\x28", "\x28", "\x28", "\x28", "\x28",
            "\x28", "\x28", "\x28", "\x28", "\x28", "\x28", "\x28", "\x28",
            "\x28", "\x28", "\x28", "\x28", "\x28", "\x28", "\x28", "\x28",
            "\x29", "\x29", "\x29", "\x29", "\x29", "\x29", "\x29", "\x29",
            "\x29", "\x29", "\x29", "\x29", "\x29", "\x29", "\x29", "\x29",
            "\x29", "\x29", "\x29", "\x29", "\x29", "\x29", "\x29", "\x29",
            "\x29", "\x29", "\x29", "\x29", "\x29", "\x29", "\x29", "\x29",
            "\x29", "\x29", "\x29", "\x29", "\x29", "\x29", "\x29", "\x29",
            "\x29", "\x29", "\x29", "\x29", "\x29", "\x29", "\x29", "\x29",
            "\x29", "\x29", "\x29", "\x29", "\x29", "\x29", "\x29", "\x29",
            "\x29", "\x29", "\x29", "\x29", "\x29", "\x29", "\x29", "\x29"
        ], [
            "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F",
            "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F",
            "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F",
            "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F",
            "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F",
            "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F",
            "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F",
            "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F", "\x3F",
            "\x27", "\x27", "\x27", "\x27", "\x27", "\x27", "\x27", "\x27",
            "\x27", "\x27", "\x27", "\x27", "\x27", "\x27", "\x27", "\x27",
            "\x27", "\x27", "\x27", "\x27", "\x27", "\x27", "\x27", "\x27",
            "\x27", "\x27", "\x27", "\x27", "\x27", "\x27", "\x27", "\x27",
            "\x2B", "\x2B", "\x2B", "\x2B", "\x2B", "\x2B", "\x2B", "\x2B",
            "\x2B", "\x2B", "\x2B", "\x2B", "\x2B", "\x2B", "\x2B", "\x2B",
            "\x2B", "\x2B", "\x2B", "\x2B", "\x2B", "\x2B", "\x2B", "\x2B",
            "\x2B", "\x2B", "\x2B", "\x2B", "\x2B", "\x2B", "\x2B", "\x2B",
            "\x7C", "\x7C", "\x7C", "\x7C", "\x7C", "\x7C", "\x7C", "\x7C",
            "\x7C", "\x7C", "\x7C", "\x7C", "\x7C", "\x7C", "\x7C", "\x7C",
            "\x7C", "\x7C", "\x7C", "\x7C", "\x7C", "\x7C", "\x7C", "\x7C",
            "\x7C", "\x7C", "\x7C", "\x7C", "\x7C", "\x7C", "\x7C", "\x7C",
            "\x23", "\x23", "\x23", "\x23", "\x23", "\x23", "\x23", "\x23",
            "\x23", "\x23", "\x23", "\x23", "\x23", "\x23", "\x23", "\x23",
            "\x3E", "\x3E", "\x3E", "\x3E", "\x3E", "\x3E", "\x3E", "\x3E",
            "\x3E", "\x3E", "\x3E", "\x3E", "\x3E", "\x3E", "\x3E", "\x3E",
            "\x00", "\x00", "\x00", "\x00", "\x00", "\x00", "\x00", "\x00",
            "\x24", "\x24", "\x24", "\x24", "\x24", "\x24", "\x24", "\x24",
            "\x40", "\x40", "\x40", "\x40", "\x40", "\x40", "\x40", "\x40",
            "\x5B", "\x5B", "\x5B", "\x5B", "\x5B", "\x5B", "\x5B", "\x5B",
            "\x5D", "\x5D", "\x5D", "\x5D", "\x5D", "\x5D", "\x5D", "\x5D",
            "\x7E", "\x7E", "\x7E", "\x7E", "\x7E", "\x7E", "\x7E", "\x7E",
            "\x5E", "\x5E", "\x5E", "\x5E", "\x7D", "\x7D", "\x7D", "\x7D",
            "\x3C", "\x3C", "\x60", "\x60", "\x7B", "\x7B", [
                "\x5C", "\x5C", "\x5C", "\x5C", "\x5C", "\x5C", "\x5C", "\x5C",
                "\x5C", "\x5C", "\x5C", "\x5C", "\x5C", "\x5C", "\x5C", "\x5C",
                "\x5C", "\x5C", "\x5C", "\x5C", "\x5C", "\x5C", "\x5C", "\x5C",
                "\x5C", "\x5C", "\x5C", "\x5C", "\x5C", "\x5C", "\x5C", "\x5C",
                "\xC3", "\xC3", "\xC3", "\xC3", "\xC3", "\xC3", "\xC3", "\xC3",
                "\xC3", "\xC3", "\xC3", "\xC3", "\xC3", "\xC3", "\xC3", "\xC3",
                "\xC3", "\xC3", "\xC3", "\xC3", "\xC3", "\xC3", "\xC3", "\xC3",
                "\xC3", "\xC3", "\xC3", "\xC3", "\xC3", "\xC3", "\xC3", "\xC3",
                "\xD0", "\xD0", "\xD0", "\xD0", "\xD0", "\xD0", "\xD0", "\xD0",
                "\xD0", "\xD0", "\xD0", "\xD0", "\xD0", "\xD0", "\xD0", "\xD0",
                "\xD0", "\xD0", "\xD0", "\xD0", "\xD0", "\xD0", "\xD0", "\xD0",
                "\xD0", "\xD0", "\xD0", "\xD0", "\xD0", "\xD0", "\xD0", "\xD0",
                "\x80", "\x80", "\x80", "\x80", "\x80", "\x80", "\x80", "\x80",
                "\x80", "\x80", "\x80", "\x80", "\x80", "\x80", "\x80", "\x80",
                "\x82", "\x82", "\x82", "\x82", "\x82", "\x82", "\x82", "\x82",
                "\x82", "\x82", "\x82", "\x82", "\x82", "\x82", "\x82", "\x82",
                "\x83", "\x83", "\x83", "\x83", "\x83", "\x83", "\x83", "\x83",
                "\x83", "\x83", "\x83", "\x83", "\x83", "\x83", "\x83", "\x83",
                "\xA2", "\xA2", "\xA2", "\xA2", "\xA2", "\xA2", "\xA2", "\xA2",
                "\xA2", "\xA2", "\xA2", "\xA2", "\xA2", "\xA2", "\xA2", "\xA2",
                "\xB8", "\xB8", "\xB8", "\xB8", "\xB8", "\xB8", "\xB8", "\xB8",
                "\xB8", "\xB8", "\xB8", "\xB8", "\xB8", "\xB8", "\xB8", "\xB8",
                "\xC2", "\xC2", "\xC2", "\xC2", "\xC2", "\xC2", "\xC2", "\xC2",
                "\xC2", "\xC2", "\xC2", "\xC2", "\xC2", "\xC2", "\xC2", "\xC2",
                "\xE0", "\xE0", "\xE0", "\xE0", "\xE0", "\xE0", "\xE0", "\xE0",
                "\xE0", "\xE0", "\xE0", "\xE0", "\xE0", "\xE0", "\xE0", "\xE0",
                "\xE2", "\xE2", "\xE2", "\xE2", "\xE2", "\xE2", "\xE2", "\xE2",
                "\xE2", "\xE2", "\xE2", "\xE2", "\xE2", "\xE2", "\xE2", "\xE2",
                "\x99", "\x99", "\x99", "\x99", "\x99", "\x99", "\x99", "\x99",
                "\xA1", "\xA1", "\xA1", "\xA1", "\xA1", "\xA1", "\xA1", "\xA1",
                "\xA7", "\xA7", "\xA7", "\xA7", "\xA7", "\xA7", "\xA7", "\xA7",
                "\xAC", "\xAC", "\xAC", "\xAC", "\xAC", "\xAC", "\xAC", "\xAC"
            ], [
                "\xB0", "\xB0", "\xB0", "\xB0", "\xB0", "\xB0", "\xB0", "\xB0",
                "\xB1", "\xB1", "\xB1", "\xB1", "\xB1", "\xB1", "\xB1", "\xB1",
                "\xB3", "\xB3", "\xB3", "\xB3", "\xB3", "\xB3", "\xB3", "\xB3",
                "\xD1", "\xD1", "\xD1", "\xD1", "\xD1", "\xD1", "\xD1", "\xD1",
                "\xD8", "\xD8", "\xD8", "\xD8", "\xD8", "\xD8", "\xD8", "\xD8",
                "\xD9", "\xD9", "\xD9", "\xD9", "\xD9", "\xD9", "\xD9", "\xD9",
                "\xE3", "\xE3", "\xE3", "\xE3", "\xE3", "\xE3", "\xE3", "\xE3",
                "\xE5", "\xE5", "\xE5", "\xE5", "\xE5", "\xE5", "\xE5", "\xE5",
                "\xE6", "\xE6", "\xE6", "\xE6", "\xE6", "\xE6", "\xE6", "\xE6",
                "\x81", "\x81", "\x81", "\x81", "\x84", "\x84", "\x84", "\x84",
                "\x85", "\x85", "\x85", "\x85", "\x86", "\x86", "\x86", "\x86",
                "\x88", "\x88", "\x88", "\x88", "\x92", "\x92", "\x92", "\x92",
                "\x9A", "\x9A", "\x9A", "\x9A", "\x9C", "\x9C", "\x9C", "\x9C",
                "\xA0", "\xA0", "\xA0", "\xA0", "\xA3", "\xA3", "\xA3", "\xA3",
                "\xA4", "\xA4", "\xA4", "\xA4", "\xA9", "\xA9", "\xA9", "\xA9",
                "\xAA", "\xAA", "\xAA", "\xAA", "\xAD", "\xAD", "\xAD", "\xAD",
                "\xB2", "\xB2", "\xB2", "\xB2", "\xB5", "\xB5", "\xB5", "\xB5",
                "\xB9", "\xB9", "\xB9", "\xB9", "\xBA", "\xBA", "\xBA", "\xBA",
                "\xBB", "\xBB", "\xBB", "\xBB", "\xBD", "\xBD", "\xBD", "\xBD",
                "\xBE", "\xBE", "\xBE", "\xBE", "\xC4", "\xC4", "\xC4", "\xC4",
                "\xC6", "\xC6", "\xC6", "\xC6", "\xE4", "\xE4", "\xE4", "\xE4",
                "\xE8", "\xE8", "\xE8", "\xE8", "\xE9", "\xE9", "\xE9", "\xE9",
                "\x01", "\x01", "\x87", "\x87", "\x89", "\x89", "\x8A", "\x8A",
                "\x8B", "\x8B", "\x8C", "\x8C", "\x8D", "\x8D", "\x8F", "\x8F",
                "\x93", "\x93", "\x95", "\x95", "\x96", "\x96", "\x97", "\x97",
                "\x98", "\x98", "\x9B", "\x9B", "\x9D", "\x9D", "\x9E", "\x9E",
                "\xA5", "\xA5", "\xA6", "\xA6", "\xA8", "\xA8", "\xAE", "\xAE",
                "\xAF", "\xAF", "\xB4", "\xB4", "\xB6", "\xB6", "\xB7", "\xB7",
                "\xBC", "\xBC", "\xBF", "\xBF", "\xC5", "\xC5", "\xE7", "\xE7",
                "\xEF", "\xEF", "\x09", "\x8E", "\x90", "\x91", "\x94", "\x9F",
                "\xAB", "\xCE", "\xD7", "\xE1", "\xEC", "\xED", [
                    "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7",
                    "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7",
                    "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7",
                    "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7",
                    "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7",
                    "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7",
                    "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7",
                    "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7",
                    "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7",
                    "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7",
                    "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7",
                    "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7",
                    "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7",
                    "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7",
                    "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7",
                    "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7", "\xC7",
                    "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF",
                    "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF",
                    "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF",
                    "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF",
                    "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF",
                    "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF",
                    "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF",
                    "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF",
                    "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF",
                    "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF",
                    "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF",
                    "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF",
                    "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF",
                    "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF",
                    "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF",
                    "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF", "\xCF"
                ], [
                    "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA",
                    "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA",
                    "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA",
                    "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA",
                    "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA",
                    "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA",
                    "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA",
                    "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA",
                    "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA",
                    "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA",
                    "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA",
                    "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA",
                    "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA",
                    "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA",
                    "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA",
                    "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA", "\xEA",
                    "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB",
                    "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB",
                    "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB",
                    "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB",
                    "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB",
                    "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB",
                    "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB",
                    "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB",
                    "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB",
                    "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB",
                    "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB",
                    "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB",
                    "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB",
                    "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB",
                    "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB",
                    "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB", "\xEB"
                ], [
                    "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0",
                    "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0",
                    "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0",
                    "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0",
                    "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0",
                    "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0",
                    "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0",
                    "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0", "\xC0",
                    "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1",
                    "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1",
                    "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1",
                    "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1",
                    "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1",
                    "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1",
                    "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1",
                    "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1", "\xC1",
                    "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8",
                    "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8",
                    "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8",
                    "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8",
                    "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8",
                    "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8",
                    "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8",
                    "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8", "\xC8",
                    "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9",
                    "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9",
                    "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9",
                    "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9",
                    "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9",
                    "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9",
                    "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9",
                    "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9", "\xC9"
                ], [
                    "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA",
                    "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA",
                    "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA",
                    "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA",
                    "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA",
                    "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA",
                    "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA",
                    "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA", "\xCA",
                    "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD",
                    "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD",
                    "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD",
                    "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD",
                    "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD",
                    "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD",
                    "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD",
                    "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD", "\xCD",
                    "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2",
                    "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2",
                    "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2",
                    "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2",
                    "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2",
                    "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2",
                    "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2",
                    "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2", "\xD2",
                    "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5",
                    "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5",
                    "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5",
                    "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5",
                    "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5",
                    "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5",
                    "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5",
                    "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5", "\xD5"
                ], [
                    "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA",
                    "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA",
                    "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA",
                    "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA",
                    "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA",
                    "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA",
                    "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA",
                    "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA", "\xDA",
                    "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB",
                    "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB",
                    "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB",
                    "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB",
                    "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB",
                    "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB",
                    "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB",
                    "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB", "\xDB",
                    "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE",
                    "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE",
                    "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE",
                    "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE",
                    "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE",
                    "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE",
                    "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE",
                    "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE", "\xEE",
                    "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0",
                    "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0",
                    "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0",
                    "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0",
                    "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0",
                    "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0",
                    "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0",
                    "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0", "\xF0"
                ], [
                    "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2",
                    "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2",
                    "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2",
                    "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2",
                    "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2",
                    "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2",
                    "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2",
                    "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2", "\xF2",
                    "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3",
                    "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3",
                    "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3",
                    "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3",
                    "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3",
                    "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3",
                    "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3",
                    "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3", "\xF3",
                    "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF",
                    "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF",
                    "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF",
                    "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF",
                    "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF",
                    "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF",
                    "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF",
                    "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF", "\xFF",
                    "\xCB", "\xCB", "\xCB", "\xCB", "\xCB", "\xCB", "\xCB", "\xCB",
                    "\xCB", "\xCB", "\xCB", "\xCB", "\xCB", "\xCB", "\xCB", "\xCB",
                    "\xCB", "\xCB", "\xCB", "\xCB", "\xCB", "\xCB", "\xCB", "\xCB",
                    "\xCB", "\xCB", "\xCB", "\xCB", "\xCB", "\xCB", "\xCB", "\xCB",
                    "\xCC", "\xCC", "\xCC", "\xCC", "\xCC", "\xCC", "\xCC", "\xCC",
                    "\xCC", "\xCC", "\xCC", "\xCC", "\xCC", "\xCC", "\xCC", "\xCC",
                    "\xCC", "\xCC", "\xCC", "\xCC", "\xCC", "\xCC", "\xCC", "\xCC",
                    "\xCC", "\xCC", "\xCC", "\xCC", "\xCC", "\xCC", "\xCC", "\xCC"
                ], [
                    "\xD3", "\xD3", "\xD3", "\xD3", "\xD3", "\xD3", "\xD3", "\xD3",
                    "\xD3", "\xD3", "\xD3", "\xD3", "\xD3", "\xD3", "\xD3", "\xD3",
                    "\xD3", "\xD3", "\xD3", "\xD3", "\xD3", "\xD3", "\xD3", "\xD3",
                    "\xD3", "\xD3", "\xD3", "\xD3", "\xD3", "\xD3", "\xD3", "\xD3",
                    "\xD4", "\xD4", "\xD4", "\xD4", "\xD4", "\xD4", "\xD4", "\xD4",
                    "\xD4", "\xD4", "\xD4", "\xD4", "\xD4", "\xD4", "\xD4", "\xD4",
                    "\xD4", "\xD4", "\xD4", "\xD4", "\xD4", "\xD4", "\xD4", "\xD4",
                    "\xD4", "\xD4", "\xD4", "\xD4", "\xD4", "\xD4", "\xD4", "\xD4",
                    "\xD6", "\xD6", "\xD6", "\xD6", "\xD6", "\xD6", "\xD6", "\xD6",
                    "\xD6", "\xD6", "\xD6", "\xD6", "\xD6", "\xD6", "\xD6", "\xD6",
                    "\xD6", "\xD6", "\xD6", "\xD6", "\xD6", "\xD6", "\xD6", "\xD6",
                    "\xD6", "\xD6", "\xD6", "\xD6", "\xD6", "\xD6", "\xD6", "\xD6",
                    "\xDD", "\xDD", "\xDD", "\xDD", "\xDD", "\xDD", "\xDD", "\xDD",
                    "\xDD", "\xDD", "\xDD", "\xDD", "\xDD", "\xDD", "\xDD", "\xDD",
                    "\xDD", "\xDD", "\xDD", "\xDD", "\xDD", "\xDD", "\xDD", "\xDD",
                    "\xDD", "\xDD", "\xDD", "\xDD", "\xDD", "\xDD", "\xDD", "\xDD",
                    "\xDE", "\xDE", "\xDE", "\xDE", "\xDE", "\xDE", "\xDE", "\xDE",
                    "\xDE", "\xDE", "\xDE", "\xDE", "\xDE", "\xDE", "\xDE", "\xDE",
                    "\xDE", "\xDE", "\xDE", "\xDE", "\xDE", "\xDE", "\xDE", "\xDE",
                    "\xDE", "\xDE", "\xDE", "\xDE", "\xDE", "\xDE", "\xDE", "\xDE",
                    "\xDF", "\xDF", "\xDF", "\xDF", "\xDF", "\xDF", "\xDF", "\xDF",
                    "\xDF", "\xDF", "\xDF", "\xDF", "\xDF", "\xDF", "\xDF", "\xDF",
                    "\xDF", "\xDF", "\xDF", "\xDF", "\xDF", "\xDF", "\xDF", "\xDF",
                    "\xDF", "\xDF", "\xDF", "\xDF", "\xDF", "\xDF", "\xDF", "\xDF",
                    "\xF1", "\xF1", "\xF1", "\xF1", "\xF1", "\xF1", "\xF1", "\xF1",
                    "\xF1", "\xF1", "\xF1", "\xF1", "\xF1", "\xF1", "\xF1", "\xF1",
                    "\xF1", "\xF1", "\xF1", "\xF1", "\xF1", "\xF1", "\xF1", "\xF1",
                    "\xF1", "\xF1", "\xF1", "\xF1", "\xF1", "\xF1", "\xF1", "\xF1",
                    "\xF4", "\xF4", "\xF4", "\xF4", "\xF4", "\xF4", "\xF4", "\xF4",
                    "\xF4", "\xF4", "\xF4", "\xF4", "\xF4", "\xF4", "\xF4", "\xF4",
                    "\xF4", "\xF4", "\xF4", "\xF4", "\xF4", "\xF4", "\xF4", "\xF4",
                    "\xF4", "\xF4", "\xF4", "\xF4", "\xF4", "\xF4", "\xF4", "\xF4"
                ], [
                    "\xF5", "\xF5", "\xF5", "\xF5", "\xF5", "\xF5", "\xF5", "\xF5",
                    "\xF5", "\xF5", "\xF5", "\xF5", "\xF5", "\xF5", "\xF5", "\xF5",
                    "\xF5", "\xF5", "\xF5", "\xF5", "\xF5", "\xF5", "\xF5", "\xF5",
                    "\xF5", "\xF5", "\xF5", "\xF5", "\xF5", "\xF5", "\xF5", "\xF5",
                    "\xF6", "\xF6", "\xF6", "\xF6", "\xF6", "\xF6", "\xF6", "\xF6",
                    "\xF6", "\xF6", "\xF6", "\xF6", "\xF6", "\xF6", "\xF6", "\xF6",
                    "\xF6", "\xF6", "\xF6", "\xF6", "\xF6", "\xF6", "\xF6", "\xF6",
                    "\xF6", "\xF6", "\xF6", "\xF6", "\xF6", "\xF6", "\xF6", "\xF6",
                    "\xF7", "\xF7", "\xF7", "\xF7", "\xF7", "\xF7", "\xF7", "\xF7",
                    "\xF7", "\xF7", "\xF7", "\xF7", "\xF7", "\xF7", "\xF7", "\xF7",
                    "\xF7", "\xF7", "\xF7", "\xF7", "\xF7", "\xF7", "\xF7", "\xF7",
                    "\xF7", "\xF7", "\xF7", "\xF7", "\xF7", "\xF7", "\xF7", "\xF7",
                    "\xF8", "\xF8", "\xF8", "\xF8", "\xF8", "\xF8", "\xF8", "\xF8",
                    "\xF8", "\xF8", "\xF8", "\xF8", "\xF8", "\xF8", "\xF8", "\xF8",
                    "\xF8", "\xF8", "\xF8", "\xF8", "\xF8", "\xF8", "\xF8", "\xF8",
                    "\xF8", "\xF8", "\xF8", "\xF8", "\xF8", "\xF8", "\xF8", "\xF8",
                    "\xFA", "\xFA", "\xFA", "\xFA", "\xFA", "\xFA", "\xFA", "\xFA",
                    "\xFA", "\xFA", "\xFA", "\xFA", "\xFA", "\xFA", "\xFA", "\xFA",
                    "\xFA", "\xFA", "\xFA", "\xFA", "\xFA", "\xFA", "\xFA", "\xFA",
                    "\xFA", "\xFA", "\xFA", "\xFA", "\xFA", "\xFA", "\xFA", "\xFA",
                    "\xFB", "\xFB", "\xFB", "\xFB", "\xFB", "\xFB", "\xFB", "\xFB",
                    "\xFB", "\xFB", "\xFB", "\xFB", "\xFB", "\xFB", "\xFB", "\xFB",
                    "\xFB", "\xFB", "\xFB", "\xFB", "\xFB", "\xFB", "\xFB", "\xFB",
                    "\xFB", "\xFB", "\xFB", "\xFB", "\xFB", "\xFB", "\xFB", "\xFB",
                    "\xFC", "\xFC", "\xFC", "\xFC", "\xFC", "\xFC", "\xFC", "\xFC",
                    "\xFC", "\xFC", "\xFC", "\xFC", "\xFC", "\xFC", "\xFC", "\xFC",
                    "\xFC", "\xFC", "\xFC", "\xFC", "\xFC", "\xFC", "\xFC", "\xFC",
                    "\xFC", "\xFC", "\xFC", "\xFC", "\xFC", "\xFC", "\xFC", "\xFC",
                    "\xFD", "\xFD", "\xFD", "\xFD", "\xFD", "\xFD", "\xFD", "\xFD",
                    "\xFD", "\xFD", "\xFD", "\xFD", "\xFD", "\xFD", "\xFD", "\xFD",
                    "\xFD", "\xFD", "\xFD", "\xFD", "\xFD", "\xFD", "\xFD", "\xFD",
                    "\xFD", "\xFD", "\xFD", "\xFD", "\xFD", "\xFD", "\xFD", "\xFD"
                ], [
                    "\xFE", "\xFE", "\xFE", "\xFE", "\xFE", "\xFE", "\xFE", "\xFE",
                    "\xFE", "\xFE", "\xFE", "\xFE", "\xFE", "\xFE", "\xFE", "\xFE",
                    "\xFE", "\xFE", "\xFE", "\xFE", "\xFE", "\xFE", "\xFE", "\xFE",
                    "\xFE", "\xFE", "\xFE", "\xFE", "\xFE", "\xFE", "\xFE", "\xFE",
                    "\x02", "\x02", "\x02", "\x02", "\x02", "\x02", "\x02", "\x02",
                    "\x02", "\x02", "\x02", "\x02", "\x02", "\x02", "\x02", "\x02",
                    "\x03", "\x03", "\x03", "\x03", "\x03", "\x03", "\x03", "\x03",
                    "\x03", "\x03", "\x03", "\x03", "\x03", "\x03", "\x03", "\x03",
                    "\x04", "\x04", "\x04", "\x04", "\x04", "\x04", "\x04", "\x04",
                    "\x04", "\x04", "\x04", "\x04", "\x04", "\x04", "\x04", "\x04",
                    "\x05", "\x05", "\x05", "\x05", "\x05", "\x05", "\x05", "\x05",
                    "\x05", "\x05", "\x05", "\x05", "\x05", "\x05", "\x05", "\x05",
                    "\x06", "\x06", "\x06", "\x06", "\x06", "\x06", "\x06", "\x06",
                    "\x06", "\x06", "\x06", "\x06", "\x06", "\x06", "\x06", "\x06",
                    "\x07", "\x07", "\x07", "\x07", "\x07", "\x07", "\x07", "\x07",
                    "\x07", "\x07", "\x07", "\x07", "\x07", "\x07", "\x07", "\x07",
                    "\x08", "\x08", "\x08", "\x08", "\x08", "\x08", "\x08", "\x08",
                    "\x08", "\x08", "\x08", "\x08", "\x08", "\x08", "\x08", "\x08",
                    "\x0B", "\x0B", "\x0B", "\x0B", "\x0B", "\x0B", "\x0B", "\x0B",
                    "\x0B", "\x0B", "\x0B", "\x0B", "\x0B", "\x0B", "\x0B", "\x0B",
                    "\x0C", "\x0C", "\x0C", "\x0C", "\x0C", "\x0C", "\x0C", "\x0C",
                    "\x0C", "\x0C", "\x0C", "\x0C", "\x0C", "\x0C", "\x0C", "\x0C",
                    "\x0E", "\x0E", "\x0E", "\x0E", "\x0E", "\x0E", "\x0E", "\x0E",
                    "\x0E", "\x0E", "\x0E", "\x0E", "\x0E", "\x0E", "\x0E", "\x0E",
                    "\x0F", "\x0F", "\x0F", "\x0F", "\x0F", "\x0F", "\x0F", "\x0F",
                    "\x0F", "\x0F", "\x0F", "\x0F", "\x0F", "\x0F", "\x0F", "\x0F",
                    "\x10", "\x10", "\x10", "\x10", "\x10", "\x10", "\x10", "\x10",
                    "\x10", "\x10", "\x10", "\x10", "\x10", "\x10", "\x10", "\x10",
                    "\x11", "\x11", "\x11", "\x11", "\x11", "\x11", "\x11", "\x11",
                    "\x11", "\x11", "\x11", "\x11", "\x11", "\x11", "\x11", "\x11",
                    "\x12", "\x12", "\x12", "\x12", "\x12", "\x12", "\x12", "\x12",
                    "\x12", "\x12", "\x12", "\x12", "\x12", "\x12", "\x12", "\x12"
                ], [
                    "\x13", "\x13", "\x13", "\x13", "\x13", "\x13", "\x13", "\x13",
                    "\x13", "\x13", "\x13", "\x13", "\x13", "\x13", "\x13", "\x13",
                    "\x14", "\x14", "\x14", "\x14", "\x14", "\x14", "\x14", "\x14",
                    "\x14", "\x14", "\x14", "\x14", "\x14", "\x14", "\x14", "\x14",
                    "\x15", "\x15", "\x15", "\x15", "\x15", "\x15", "\x15", "\x15",
                    "\x15", "\x15", "\x15", "\x15", "\x15", "\x15", "\x15", "\x15",
                    "\x17", "\x17", "\x17", "\x17", "\x17", "\x17", "\x17", "\x17",
                    "\x17", "\x17", "\x17", "\x17", "\x17", "\x17", "\x17", "\x17",
                    "\x18", "\x18", "\x18", "\x18", "\x18", "\x18", "\x18", "\x18",
                    "\x18", "\x18", "\x18", "\x18", "\x18", "\x18", "\x18", "\x18",
                    "\x19", "\x19", "\x19", "\x19", "\x19", "\x19", "\x19", "\x19",
                    "\x19", "\x19", "\x19", "\x19", "\x19", "\x19", "\x19", "\x19",
                    "\x1A", "\x1A", "\x1A", "\x1A", "\x1A", "\x1A", "\x1A", "\x1A",
                    "\x1A", "\x1A", "\x1A", "\x1A", "\x1A", "\x1A", "\x1A", "\x1A",
                    "\x1B", "\x1B", "\x1B", "\x1B", "\x1B", "\x1B", "\x1B", "\x1B",
                    "\x1B", "\x1B", "\x1B", "\x1B", "\x1B", "\x1B", "\x1B", "\x1B",
                    "\x1C", "\x1C", "\x1C", "\x1C", "\x1C", "\x1C", "\x1C", "\x1C",
                    "\x1C", "\x1C", "\x1C", "\x1C", "\x1C", "\x1C", "\x1C", "\x1C",
                    "\x1D", "\x1D", "\x1D", "\x1D", "\x1D", "\x1D", "\x1D", "\x1D",
                    "\x1D", "\x1D", "\x1D", "\x1D", "\x1D", "\x1D", "\x1D", "\x1D",
                    "\x1E", "\x1E", "\x1E", "\x1E", "\x1E", "\x1E", "\x1E", "\x1E",
                    "\x1E", "\x1E", "\x1E", "\x1E", "\x1E", "\x1E", "\x1E", "\x1E",
                    "\x1F", "\x1F", "\x1F", "\x1F", "\x1F", "\x1F", "\x1F", "\x1F",
                    "\x1F", "\x1F", "\x1F", "\x1F", "\x1F", "\x1F", "\x1F", "\x1F",
                    "\x7F", "\x7F", "\x7F", "\x7F", "\x7F", "\x7F", "\x7F", "\x7F",
                    "\x7F", "\x7F", "\x7F", "\x7F", "\x7F", "\x7F", "\x7F", "\x7F",
                    "\xDC", "\xDC", "\xDC", "\xDC", "\xDC", "\xDC", "\xDC", "\xDC",
                    "\xDC", "\xDC", "\xDC", "\xDC", "\xDC", "\xDC", "\xDC", "\xDC",
                    "\xF9", "\xF9", "\xF9", "\xF9", "\xF9", "\xF9", "\xF9", "\xF9",
                    "\xF9", "\xF9", "\xF9", "\xF9", "\xF9", "\xF9", "\xF9", "\xF9",
                    "\x0A", "\x0A", "\x0A", "\x0A", "\x0D", "\x0D", "\x0D", "\x0D",
                    "\x16", "\x16", "\x16", "\x16"
                ]
            ]
        ]
    ];
}
